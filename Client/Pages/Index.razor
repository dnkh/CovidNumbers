@page "/"
@inject IHttpClientFactory ClientFactory
@using dnkh.covidnumbers.models;

<div class="input-group input-group-lg">
  <div class="input-group-prepend">
    <span class="input-group-text" id="inputGroup-sizing-lg"><i class="fas fa-search"></i></span>
  </div>
  <input type="text" class="form-control" placeholder="Nach einem Ort suchen" aria-label="Large" aria-describedby="inputGroup-sizing-sm" @oninput="SearchValueChanged">
</div>
<hr/>

@if (CurrentCovidData == null)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" role="status" />
    </div>
     <p>
        <div class="d-flex justify-content-center text-primary" >Aktuelle Daten werden geladen...</div>
    </p>
}
else
{
    <div class="row">
    @foreach (var city in FilteredCovidData.Cities.OrderBy( i => i.CityData.Name))
    {
        <CityComponent CityData="city.CityData" />
    }
    </div>
}
    

@code
{


public void SearchValueChanged( ChangeEventArgs args )
{
    FilteredCovidData.Cities = CurrentCovidData.Cities.Where( c => c.CityData.Name.Contains(args.Value.ToString())).ToList();
}


 private CovidModel CurrentCovidData {get;set;}
 private CovidModel FilteredCovidData {get;set;}
    protected override async Task OnInitializedAsync()
    {
        var client = ClientFactory.CreateClient("DataService");

        CurrentCovidData = await client.GetFromJsonAsync<CovidModel>("https://services7.arcgis.com/0Uc5jDlEgdLosloE/arcgis/rest/services/Gemeinden/FeatureServer/0/query?f=json&where=1%3D1&outFields=*&returngeometry=false");
        FilteredCovidData = new CovidModel();
        FilteredCovidData.Cities = new List<City>(CurrentCovidData.Cities);

    }
}